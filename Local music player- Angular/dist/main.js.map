{"version":3,"sources":["./src/app/app.component.css","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { ISong } from './model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  currentProgress$ = new BehaviorSubject(0);\n  currentTime$ = new Subject();\n\n  @ViewChild('player', {static: true}) player: ElementRef;\n\n  songs: ISong[] = [];\n\n  audio = new Audio();\n  isPlaying = false;\n  activeSong;\n  durationTime: string;\n\n  ngOnInit() {\n    this.songs = this.getListOfSongs();\n\n    this.player.nativeElement.src = this.songs[0];\n    this.player.nativeElement.load();\n    this.activeSong = this.songs[0];\n    this.isPlaying = false;\n  }\n\n  playSong(song): void {\n    this.durationTime = undefined;\n    this.audio.pause();\n\n    this.player.nativeElement.src = song.path;\n    this.player.nativeElement.load();\n    this.player.nativeElement.play();\n    this.activeSong = song;\n    this.isPlaying = true;\n  }\n\n  onTimeUpdate() {\n\n    // Set song duration time\n    if (!this.durationTime) {\n      this.setSongDuration();\n    }\n\n    // Emit converted audio currenttime in user friendly ex. 01:15\n    const currentMinutes = this.generateMinutes(this.player.nativeElement.currentTime);\n    const currentSeconds = this.generateSeconds(this.player.nativeElement.currentTime);\n    this.currentTime$.next(this.generateTimeToDisplay(currentMinutes, currentSeconds));\n\n\n    // Emit amount of song played percents\n    const percents = this.generatePercentage(this.player.nativeElement.currentTime, this.player.nativeElement.duration);\n    if (!isNaN(percents)) {\n      this.currentProgress$.next(percents);\n    }\n\n  }\n\n  // Play song that comes after active song\n  playNextSong(): void {\n    const nextSongIndex = this.songs.findIndex((song) => song.id === this.activeSong.id + 1);\n\n    if (nextSongIndex === -1) {\n      this.playSong(this.songs[0]);\n    } else {\n      this.playSong(this.songs[nextSongIndex]);\n    }\n  }\n\n  // Play song that comes before active song\n  playPreviousSong(): void {\n    const prevSongIndex = this.songs.findIndex((song) => song.id === this.activeSong.id - 1);\n    if (prevSongIndex === -1) {\n      this.playSong(this.songs[this.songs.length - 1]);\n    } else {\n      this.playSong(this.songs[prevSongIndex]);\n    }\n  }\n\n  // Calculate song duration and set it to user friendly format, ex. 01:15\n  setSongDuration(): void {\n    const durationInMinutes = this.generateMinutes(this.player.nativeElement.duration);\n    const durationInSeconds = this.generateSeconds(this.player.nativeElement.duration);\n\n    if (!isNaN(this.player.nativeElement.duration)) {\n      this.durationTime = this.generateTimeToDisplay(durationInMinutes, durationInSeconds);\n    }\n  }\n\n  // Generate minutes from audio time\n  generateMinutes(currentTime: number): number {\n    return Math.floor(currentTime / 60);\n  }\n\n  // Generate seconds from audio time\n  generateSeconds(currentTime: number): number | string {\n    const secsFormula = Math.floor(currentTime % 60);\n    return secsFormula < 10 ? '0' + String(secsFormula) : secsFormula;\n  }\n\n  generateTimeToDisplay(currentMinutes, currentSeconds): string {\n    return `${currentMinutes}:${currentSeconds}`;\n  }\n\n  // Generate percentage of current song\n  generatePercentage(currentTime: number, duration: number): number {\n    return Math.round((currentTime / duration) * 100);\n  }\n\n  onPause(): void {\n    this.isPlaying = false;\n    this.currentProgress$.next(0);\n    this.currentTime$.next('0:00');\n    this.durationTime = undefined;\n  }\n\n  getListOfSongs(): ISong[] {\n    return [\n      {\n        id: 1,\n        title: 'Evanescence-Bring Me To Life(with lyrics).mp3',\n        path: './assets/Evanescence-Bring Me To Life(with lyrics).mp3'\n      },\n      {\n        id: 2,\n        title: 'Numb (Official Video) - Linkin Park.mp3',\n        path: './assets/Numb (Official Video) - Linkin Park.mp3'\n      },\n      {\n        id: 3,\n        title: 'System Of A Down - Toxicity (Official Video).mp3',\n        path: './assets/System Of A Down - Toxicity (Official Video).mp3'\n      }\n    ];\n  }\n}\n\n","export default \"<div class=\\\"ui container center-screen\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-12\\\">\\n        <img src=\\\"'../../assets/logo.png\\\" alt=\\\"...\\\" class=\\\"img-thumbnail\\\">\\n      </div>\\n  </div>\\n  <br>\\n  <br>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\"><h4>{{ activeSong?.title }}</h4></div>\\n  </div>\\n  <br>\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6 text-left\\\">\\n            {{ currentTime$ | async }}\\n          </div>\\n          <div class=\\\"col-6 text-right\\\" *ngIf=\\\"player?.duration\\\">\\n            {{ durationTime }}\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"progress\\\">\\n        <div class=\\\"progress-bar bg-info\\\" role=\\\"progressbar\\\"\\n             [ngStyle]=\\\"{'width': (currentProgress$ | async) + '%'}\\\"\\n             [attr.aria-valuenow]=\\\"(currentProgress$ | async) \\\"\\n             aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\n      </div>\\n      <br>\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"playPreviousSong()\\\"><b>{{ '<<' }}</b></button>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" *ngIf=\\\"isPlaying\\\" (click)=\\\"player.pause()\\\">Stop</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" *ngIf=\\\"!isPlaying\\\" (click)=\\\"playSong(activeSong)\\\">Play</button>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"playNextSong()\\\"><b>{{ '>>' }}</b></button>\\n    </div>\\n  </div>\\n</div>\\n  <audio #player\\n         (timeupdate)=\\\"onTimeUpdate()\\\"\\n         (pause)=\\\"onPause()\\\"></audio>\\n\";","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}